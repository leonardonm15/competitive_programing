#include <bits/stdc++.h>

using namespace std;
//#define int long long

void solve () {
    int n, k; cin >> n >> k;
    map<int, int> map;
    vector<int> arr(n); 
    vector<int> v;
    vector<set<int>> vec;
    for (int i=0; i < n; i++) {
        cin >> arr[i];
        map[arr[i]]++;
    } 

    for (auto [cara, f]: map) if (f >= k) v.push_back(cara);

    if (!v.size()) {
        cout << -1 << endl;
        return;
    }

    vector<int> vector;
    int maxi = 0;
    int lexi = 0;
    for (int i=0; i < v.size(); i++) {
        /* cout << "i -> " << i << endl; */
        cout << "v[i] -> " << v[i] << endl;
        bool flag = false;
        if (vector.size() == 0 || vector[vector.size() - 1] == v[i] - 1) {
            flag = true;
            vector.push_back(v[i]);
        } else {
            /* cout << "vector -> "; */
            /* for (auto cara: vector) cout << cara << " "; */
            /* cout << endl; */
            int a = *max_element(vector.begin(), vector.end());
            int b = *min_element(vector.begin(), vector.end());
            /* cout << "a -> " << a << endl; */
            /* cout << "b -> " << b << endl; */
            /* cout << "maxi -> " << maxi << endl; */
            /* cout << "lexi -> " << lexi << endl; */
            if (a - b >= maxi - lexi) {
                maxi = *max_element(vector.begin(), vector.end());
                lexi = *min_element(vector.begin(), vector.end());
            }
            vector.clear();
        }
    }
    int a = *max_element(vector.begin(), vector.end());
    int b = *min_element(vector.begin(), vector.end());
    if (a - b >= maxi - lexi) {
        maxi = *max_element(vector.begin(), vector.end());
        lexi = *min_element(vector.begin(), vector.end());
    }
    cout << lexi << " " << maxi << endl;
}

signed main() {
    ios_base::sync_with_stdio(0);cin.tie(0);
    int TC = 1;
    if (TC){
        cin >> TC;
        while (TC--) solve();
    } else {
        solve();
    }
    return 0;
}
